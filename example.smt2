(set-option :print-success false)
(set-logic QF_LIA)
(declare-fun x11 () Int)
(declare-fun x7 () Int)
(declare-fun x14 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(declare-fun x12 () Int)
(declare-fun x13 () Int)
(declare-fun x1 () Int)
(declare-fun x18 () Int)
(declare-fun x2 () Int)
(declare-fun x5 () Int)
(declare-fun x10 () Int)
(declare-fun x16 () Int)
(declare-fun x15 () Int)
(declare-fun x6 () Int)
(declare-fun x4 () Int)
(declare-fun x3 () Int)
(declare-fun x20 () Int)
(declare-fun x19 () Int)
(declare-fun x17 () Int)
(assert (>= (+ x1 (- x6) x13 x19 (- x18) x7 (- x10) (- x8)) 0))
(assert (<= 0 x19))
(assert (<= 0 x10))
(assert (<= 0 (+ (* x15 (- 2)) (- x7) x8 x16 (* x3 2) (- x19) x9 (- x20) x18 (- x14))))
(assert (>= (+ (- x15) (* x8 3) x13 (- x10) (* x7 (- 3)) x3) 1))
(assert (<= 0 (+ (* x9 (- 2)) x6 x3 x11 (- x19) (- x15) (- x1) x18 (* x14 2) (- x5))))
(assert (>= x13 0))
(assert (>= x12 0))
(assert (>= (+ x2 x10 (- x6) (- x13) x1 x11 (- x5) (- x17) (- x20) x16) 1))
(assert (>= x16 0))
(assert (<= 0 x6))
(assert (>= x18 0))
(assert (>= x5 0))
(assert (>= x4 0))
(assert (>= x7 0))
(assert (>= x2 0))
(assert (<= 0 x8))
(assert (<= 0 x3))
(assert (>= x9 0))
(assert (>= (+ (- x10) (- x7) x13 x8) (- 1)))
(assert (<= 0 x11))
(assert (<= 0 x15))
(assert (<= 0 x20))
(assert (>= x14 0))
(assert (<= 1 (+ x20 (- x10) x18 (* x8 2) x13 (- x16) (* (- 2) x7) (- x19))))
(assert (<= 0 (+ x4 (- x18) (- x13) x19 x9 x10 (- x7) (- x12) x8 (- x14))))
(assert (>= (+ x13 x4 (- x10) (- x5) (- x18) x19 x11 (- x12)) 0))
(assert (>= x1 0))
(assert (<= 0 x17))
(assert (<= 0 (+ x16 (- x8) x10 (* x1 (- 2)) x7 (- x19) (- x20) (- x13) (* x6 2) x18)))
(check-sat)
(exit)
